services:
  postgres:
    image: postgres:latest
    container_name: pgner
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgner_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - pgner-network

  adminer:
    image: adminer:latest
    container_name: adminer
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - pgner-network

  mlflow:
    image: mlflow:latest
    container_name: mlflow
    environment:
      MLFLOW_BACKEND_STORE_URI: ${MLFLOW_BACKEND_STORE_URI}
      MLFLOW_ARTIFACT_ROOT: ${MLFLOW_ARTIFACT_ROOT}
    ports:
      - "${MLFLOW_PORT}:5000"
    volumes:
      - mlflow_data:/mlflow
    networks:
      - pgner-network
    command: mlflow server --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/artifacts --host 0.0.0.0 --port 5000

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"
    networks:
      - pgner-network
    extra_hosts:
      - "host.docker.internal:host-gateway"


volumes:
  pgner_data:
  mlflow_data:

networks:
  pgner-network:
    driver: bridge
